import ts from "typescript";
import type { DevTools, DevToolsSys, RepoInfo } from "../types";
import type { CLIArgs } from "./index";
import { type FigmaBuilderLink } from "./figma-utils";
import type { UserContext } from "$/ai-utils";
export declare const runFigmaPublish: (sys: DevToolsSys, args: CLIArgs) => Promise<undefined>;
export declare const FIGMA_CONNECT_CALL = "figmaMapping";
export declare function findAllMappingFiles(sys: DevToolsSys): Promise<string[]>;
export declare function setPublicKey(sys: DevToolsSys, publicKey: string, devTools: DevTools | undefined, ensureFigmaImportPage?: boolean): Promise<boolean>;
export interface PublishedMapping {
    repoInfo: RepoInfo | undefined;
    figmaBuilderLinks: FigmaBuilderLink[];
    spaceId: string;
    privateKey: string;
    userId: string;
    userContext: UserContext;
}
export declare function findMappingsFromFiles({ sys, mappingFiles, typeCheck, }: {
    mappingFiles: string[];
    sys: DevToolsSys;
    typeCheck?: boolean;
}): Promise<{
    figmaBuilderLinks: FigmaBuilderLink[];
    diagnostics: ts.Diagnostic[];
    figmaLinksToResolve: string[];
}>;
